// Generated by SolidPython 1.1.3 on 2022-04-11 11:45:25


union() {
	color(alpha = 1.0000000000, c = [0.6500000000, 0.5000000000, 0.4000000000]) {
		cube(size = [260, 260, 8]);
	}
	translate(v = [0, 0, 8]) {
		union() {
			cube(size = 0);
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 28, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "H", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 22, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "H", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [28, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "1", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [22, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "1", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 58, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "G", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 52, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "G", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [58, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "2", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [52, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "2", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 88, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "F", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 82, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "F", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [88, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "3", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [82, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "3", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 118, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "E", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 112, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "E", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [118, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "4", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [112, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "4", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 148, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "D", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 142, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "D", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [148, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "5", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [142, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "5", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 178, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "C", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 172, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "C", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [178, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "6", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [172, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "6", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 208, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "B", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 202, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "B", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [208, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "7", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [202, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "7", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 238, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "A", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 232, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "A", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [238, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "8", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [232, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "8", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	translate(v = [10, 10, 8]) {
		union() {
			cube(size = 0);
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [0, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [30, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [60, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [90, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [120, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [150, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [180, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [210, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [0, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [30, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [60, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [90, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [120, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [150, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [180, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [210, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [0, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [30, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [60, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [90, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [120, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [150, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [180, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [210, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [0, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [30, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [60, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [90, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [120, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [150, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [180, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [210, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [0, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [30, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [60, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [90, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [120, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [150, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [180, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [210, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [0, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [30, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [60, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [90, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [120, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [150, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [180, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [210, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [0, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [30, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [60, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [90, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [120, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [150, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [180, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [210, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [0, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [30, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [60, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [90, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [120, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [150, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [180, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [210, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [235.0000000000, 235.0000000000, 10]) {
			union() {
				cylinder(d = 22, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 20, d2 = 10, h = 24);
				}
				translate(v = [0, 0, 34]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 37]) {
					difference() {
						cylinder(d = 18, h = 13);
						translate(v = [0, 0, 8]) {
							cylinder(d = 14, h = 6);
						}
						translate(v = [0, 0, 11]) {
							rotate(a = [0, 0, 0]) {
								cube(center = true, size = [4, 19, 6]);
							}
						}
						translate(v = [0, 0, 11]) {
							rotate(a = [0, 0, 60]) {
								cube(center = true, size = [4, 19, 6]);
							}
						}
						translate(v = [0, 0, 11]) {
							rotate(a = [0, 0, 120]) {
								cube(center = true, size = [4, 19, 6]);
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [25.0000000000, 55.0000000000, 10]) {
			union() {
				cylinder(d = 22, h = 12);
				translate(v = [0, 0, 12]) {
					translate(v = [-9, 5, 0]) {
						rotate(a = [90, 0, 0]) {
							linear_extrude(height = 10) {
								union() {
									polygon(points = [[0, 0], [0, 34], [18, 0]]);
									translate(v = [9, 20, 0]) {
										circle(d = 11);
									}
									translate(v = [0, 20, 0]) {
										polygon(points = [[0, 0], [0, 11], [20, 7], [20, 0]]);
									}
									translate(v = [13, 14, 0]) {
										difference() {
											circle(d = 38);
											translate(v = [-13, -19, 0]) {
												square(size = 39);
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [235.0000000000, 205.0000000000, 10]) {
			rotate(a = [0, 0, 180]) {
				union() {
					cylinder(d = 22, h = 12);
					translate(v = [0, 0, 12]) {
						translate(v = [-9, 5, 0]) {
							rotate(a = [90, 0, 0]) {
								linear_extrude(height = 10) {
									union() {
										polygon(points = [[0, 0], [0, 34], [18, 0]]);
										translate(v = [9, 20, 0]) {
											circle(d = 11);
										}
										translate(v = [0, 20, 0]) {
											polygon(points = [[0, 0], [0, 11], [20, 7], [20, 0]]);
										}
										translate(v = [13, 14, 0]) {
											difference() {
												circle(d = 38);
												translate(v = [-13, -19, 0]) {
													square(size = 39);
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [25.0000000000, 85.0000000000, 10]) {
			union() {
				cylinder(d = 22, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 20, d2 = 10, h = 24);
				}
				translate(v = [0, 0, 34]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 44]) {
					difference() {
						union() {
							sphere(d = 18);
							translate(v = [0, 0, 10]) {
								sphere(d = 4);
							}
						}
						translate(v = [2, 0, 4]) {
							rotate(a = [0, 20, 0]) {
								cube(center = true, size = [2, 20, 12]);
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [235.0000000000, 175.0000000000, 10]) {
			union() {
				cylinder(d = 22, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 20, d2 = 10, h = 24);
				}
				translate(v = [0, 0, 34]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 44]) {
					difference() {
						union() {
							sphere(d = 18);
							translate(v = [0, 0, 10]) {
								sphere(d = 4);
							}
						}
						translate(v = [2, 0, 4]) {
							rotate(a = [0, 20, 0]) {
								cube(center = true, size = [2, 20, 12]);
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [25.0000000000, 115.0000000000, 10]) {
			union() {
				cylinder(d = 24, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 22, d2 = 12, h = 28);
				}
				translate(v = [0, 0, 40]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 43]) {
					union() {
						cylinder(d1 = 12, d2 = 18, h = 13);
						translate(v = [0, 0, 18]) {
							cube(center = true, size = [2, 2, 10]);
						}
						translate(v = [0, 0, 18]) {
							rotate(a = [0, 90, 0]) {
								cube(center = true, size = [2, 2, 10]);
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [235.0000000000, 145.0000000000, 10]) {
			union() {
				cylinder(d = 24, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 22, d2 = 12, h = 28);
				}
				translate(v = [0, 0, 40]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 43]) {
					union() {
						cylinder(d1 = 12, d2 = 18, h = 13);
						translate(v = [0, 0, 15]) {
							sphere(d = 6);
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [25.0000000000, 145.0000000000, 10]) {
			union() {
				cylinder(d = 24, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 22, d2 = 12, h = 28);
				}
				translate(v = [0, 0, 40]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 43]) {
					union() {
						cylinder(d1 = 12, d2 = 18, h = 13);
						translate(v = [0, 0, 15]) {
							sphere(d = 6);
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [235.0000000000, 115.0000000000, 10]) {
			union() {
				cylinder(d = 24, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 22, d2 = 12, h = 28);
				}
				translate(v = [0, 0, 40]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 43]) {
					union() {
						cylinder(d1 = 12, d2 = 18, h = 13);
						translate(v = [0, 0, 18]) {
							cube(center = true, size = [2, 2, 10]);
						}
						translate(v = [0, 0, 18]) {
							rotate(a = [0, 90, 0]) {
								cube(center = true, size = [2, 2, 10]);
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [25.0000000000, 175.0000000000, 10]) {
			union() {
				cylinder(d = 22, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 20, d2 = 10, h = 24);
				}
				translate(v = [0, 0, 34]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 44]) {
					difference() {
						union() {
							sphere(d = 18);
							translate(v = [0, 0, 10]) {
								sphere(d = 4);
							}
						}
						translate(v = [2, 0, 4]) {
							rotate(a = [0, 20, 0]) {
								cube(center = true, size = [2, 20, 12]);
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [235.0000000000, 85.0000000000, 10]) {
			union() {
				cylinder(d = 22, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 20, d2 = 10, h = 24);
				}
				translate(v = [0, 0, 34]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 44]) {
					difference() {
						union() {
							sphere(d = 18);
							translate(v = [0, 0, 10]) {
								sphere(d = 4);
							}
						}
						translate(v = [2, 0, 4]) {
							rotate(a = [0, 20, 0]) {
								cube(center = true, size = [2, 20, 12]);
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [25.0000000000, 205.0000000000, 10]) {
			union() {
				cylinder(d = 22, h = 12);
				translate(v = [0, 0, 12]) {
					translate(v = [-9, 5, 0]) {
						rotate(a = [90, 0, 0]) {
							linear_extrude(height = 10) {
								union() {
									polygon(points = [[0, 0], [0, 34], [18, 0]]);
									translate(v = [9, 20, 0]) {
										circle(d = 11);
									}
									translate(v = [0, 20, 0]) {
										polygon(points = [[0, 0], [0, 11], [20, 7], [20, 0]]);
									}
									translate(v = [13, 14, 0]) {
										difference() {
											circle(d = 38);
											translate(v = [-13, -19, 0]) {
												square(size = 39);
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [235.0000000000, 55.0000000000, 10]) {
			rotate(a = [0, 0, 180]) {
				union() {
					cylinder(d = 22, h = 12);
					translate(v = [0, 0, 12]) {
						translate(v = [-9, 5, 0]) {
							rotate(a = [90, 0, 0]) {
								linear_extrude(height = 10) {
									union() {
										polygon(points = [[0, 0], [0, 34], [18, 0]]);
										translate(v = [9, 20, 0]) {
											circle(d = 11);
										}
										translate(v = [0, 20, 0]) {
											polygon(points = [[0, 0], [0, 11], [20, 7], [20, 0]]);
										}
										translate(v = [13, 14, 0]) {
											difference() {
												circle(d = 38);
												translate(v = [-13, -19, 0]) {
													square(size = 39);
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [25.0000000000, 235.0000000000, 10]) {
			union() {
				cylinder(d = 22, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 20, d2 = 10, h = 24);
				}
				translate(v = [0, 0, 34]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 37]) {
					difference() {
						cylinder(d = 18, h = 13);
						translate(v = [0, 0, 8]) {
							cylinder(d = 14, h = 6);
						}
						translate(v = [0, 0, 11]) {
							rotate(a = [0, 0, 0]) {
								cube(center = true, size = [4, 19, 6]);
							}
						}
						translate(v = [0, 0, 11]) {
							rotate(a = [0, 0, 60]) {
								cube(center = true, size = [4, 19, 6]);
							}
						}
						translate(v = [0, 0, 11]) {
							rotate(a = [0, 0, 120]) {
								cube(center = true, size = [4, 19, 6]);
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [235.0000000000, 25.0000000000, 10]) {
			union() {
				cylinder(d = 22, h = 12);
				translate(v = [0, 0, 12]) {
					cylinder(d1 = 20, d2 = 10, h = 24);
				}
				translate(v = [0, 0, 34]) {
					cylinder(d = 20, h = 3);
				}
				translate(v = [0, 0, 37]) {
					difference() {
						cylinder(d = 18, h = 13);
						translate(v = [0, 0, 8]) {
							cylinder(d = 14, h = 6);
						}
						translate(v = [0, 0, 11]) {
							rotate(a = [0, 0, 0]) {
								cube(center = true, size = [4, 19, 6]);
							}
						}
						translate(v = [0, 0, 11]) {
							rotate(a = [0, 0, 60]) {
								cube(center = true, size = [4, 19, 6]);
							}
						}
						translate(v = [0, 0, 11]) {
							rotate(a = [0, 0, 120]) {
								cube(center = true, size = [4, 19, 6]);
							}
						}
					}
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [55.0000000000, 25.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [205.0000000000, 235.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [55.0000000000, 55.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [205.0000000000, 205.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [55.0000000000, 85.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [205.0000000000, 175.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [55.0000000000, 115.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [205.0000000000, 145.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [55.0000000000, 145.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [205.0000000000, 115.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [55.0000000000, 175.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [205.0000000000, 85.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [55.0000000000, 205.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [205.0000000000, 55.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [1, 1, 1]) {
		translate(v = [55.0000000000, 235.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
	color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
		translate(v = [205.0000000000, 25.0000000000, 10]) {
			union() {
				cylinder(d = 20, h = 10);
				translate(v = [0, 0, 10]) {
					cylinder(d1 = 18, d2 = 8, h = 15);
				}
				translate(v = [0, 0, 25]) {
					cylinder(d = 15, h = 3);
				}
				translate(v = [0, 0, 33]) {
					sphere(r = 7);
				}
			}
		}
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
from solid import *
from solid.utils import *
from Pieces import *

HALF_TILE = TILE_WIDTH/2

def place_piece(i,j):
    return translate([i*TILE_WIDTH+HALF_TILE+BORDER, j*TILE_WIDTH+HALF_TILE+BORDER, BOARD_THICK])

def init_game():
    for i, piece in enumerate(pieces):
        available_pieces.append(piece(i//8, i%8, White))
        if piece == King:
            piece = Queen
        elif piece == Queen:
            piece = King
        available_pieces.append(piece((63-i)//8, (63-i)%8, BlackPaint))
    render_game()

def render_game():
    game_set = board
    for piece in available_pieces:
        game_set += color(piece.color)(place_piece(piece.coordinates[0], piece.coordinates[1])(piece.object))
    scad_render_to_file(game_set, "./game_set.scad")

def search_piece(coord):
    for p in available_pieces:
        if p.coordinates == coord:
            return p
    return None

def coord_to_tuple(coord):
    return (int(coord[1])-1, letter_map[coord[0].upper()])

letter_map = {
    'A' : 7,
    'B' : 6,
    'C' : 5,
    'D' : 4,
    'E' : 3,
    'F' : 2,
    'G' : 1,
    'H' : 0}

pieces = [Rook, Knight, Bishop, King, Queen, Bishop, Knight, Rook,
          Pawn, Pawn, Pawn, Pawn, Pawn, Pawn, Pawn, Pawn]

available_pieces = []
init_game()
player = White
while True:
    print(("White" if player == White else "Black") + " Player")
    
    piece_coord = input("Select Piece to move: ")
    piece = search_piece(coord_to_tuple(piece_coord))
    
    target = input("Select Target Position: ")
    target_piece = search_piece(coord_to_tuple(target))
    
    if target_piece:
        available_pieces.remove(target_piece)
    piece.coordinates = (coord_to_tuple(target))
#     available_pieces.append(piece)
    render_game()
    player = BlackPaint if player == White else White 
 
************************************************/
