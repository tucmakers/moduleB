// Generated by SolidPython 1.1.3 on 2022-04-11 03:57:36


union() {
	color(alpha = 1.0000000000, c = [0.6500000000, 0.5000000000, 0.4000000000]) {
		cube(size = [260, 260, 8]);
	}
	translate(v = [0, 0, 8]) {
		union() {
			cube(size = 0);
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 28, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "H", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 22, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "H", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [28, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "1", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [22, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "1", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 58, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "G", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 52, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "G", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [58, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "2", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [52, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "2", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 88, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "F", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 82, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "F", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [88, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "3", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [82, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "3", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 118, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "E", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 112, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "E", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [118, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "4", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [112, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "4", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 148, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "D", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 142, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "D", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [148, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "5", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [142, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "5", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 178, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "C", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 172, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "C", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [178, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "6", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [172, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "6", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 208, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "B", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 202, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "B", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [208, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "7", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [202, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "7", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [3, 238, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "A", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [257, 232, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "A", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [238, 2, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, 90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "8", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [232, 258, 0]) {
					resize(newsize = [5, 5, 0]) {
						rotate(a = [0, 0, -90]) {
							translate(v = [0, 0.0000000000, 0]) {
								resize(newsize = [15, 0, 0.5000000000]) {
									union() {
										translate(v = [0, 0.0000000000, 0]) {
											linear_extrude(height = 1) {
												text($fn = 40, font = "MgOpen Modata:style=Bold", halign = "left", spacing = 1, text = "8", valign = "baseline");
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	translate(v = [10, 10, 8]) {
		union() {
			cube(size = 0);
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [0, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [30, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [60, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [90, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [120, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [150, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [180, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [210, 0, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [0, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [30, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [60, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [90, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [120, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [150, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [180, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [210, 30, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [0, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [30, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [60, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [90, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [120, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [150, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [180, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [210, 60, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [0, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [30, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [60, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [90, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [120, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [150, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [180, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [210, 90, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [0, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [30, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [60, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [90, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [120, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [150, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [180, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [210, 120, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [0, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [30, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [60, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [90, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [120, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [150, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [180, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [210, 150, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [0, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [30, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [60, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [90, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [120, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [150, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [180, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [210, 180, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [0, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [30, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [60, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [90, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [120, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [150, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [0.2000000000, 0.2000000000, 0.2000000000]) {
				translate(v = [180, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
			color(alpha = 1.0000000000, c = [1, 1, 1]) {
				translate(v = [210, 210, 0]) {
					cube(size = [30, 30, 2]);
				}
			}
		}
	}
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
from solid import *
from solid.utils import *

TILE_WIDTH = 30 # mm
BASE_THICK = 8 # mm
TILE_THICK = 2 # mm
BORDER = 10 # mm
BOARD_THICK = BASE_THICK + TILE_THICK

def next_color():
    global current_color
    current_color = not current_color
    return White if current_color == True else BlackPaint

def new_tile(x_translate, y_translate, tile_color):
    tile = cube([TILE_WIDTH, TILE_WIDTH, TILE_THICK])
    return color(tile_color)(translate([x_translate,y_translate,0])(tile))

def prepare_char(char, x, y, zrotate):
    letter = label(char)
    letter = rotate([0,0,zrotate])(letter)
    letter = resize([5,5,0])(letter)
    letter = translate([x, y, 0])(letter)
    letter = color(White)(letter)
    return letter

def generate_notation():
    notation = cube(0)
    for num, letter in enumerate(list("HGFEDCBA")):
        notation += prepare_char(letter, 3, num*TILE_WIDTH+BORDER+18, -90)
        notation += prepare_char(letter, 8*TILE_WIDTH+17, num*TILE_WIDTH+BORDER+12, 90)
        notation += prepare_char(str(num+1), num*TILE_WIDTH+BORDER+18, 2, 90)
        notation += prepare_char(str(num+1), num*TILE_WIDTH+BORDER+12, 8*TILE_WIDTH+18, -90)
    return notation
    
current_color = True # True for White & False for Black
board = color(Oak)(cube([TILE_WIDTH*8+BORDER*2, TILE_WIDTH*8+BORDER*2, BASE_THICK]))
board += up(BASE_THICK)(generate_notation())
tiles = cube(0)
for row in range(8):
    next_color() # Start each line with different color
    for col in range(8):
        tiles += new_tile(col*TILE_WIDTH,row*TILE_WIDTH,next_color())

board += translate([BORDER,BORDER,BASE_THICK])(tiles)

scad_render_to_file(board, "./chess_board.scad") 
 
************************************************/
